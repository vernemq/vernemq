name: Checks for a PR

on:
  pull_request:
    branches:
      - master

jobs:
  dialyzer:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.0.0
      - name: Cache PLTs
        id: cache-plts
        uses: actions/cache@v2
        with:
          path: |
            plts
            plts_base
          key: ${{ runner.os }}-erlang-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
      - run: sudo apt-get -y install libsnappy-dev
      - uses: gleam-lang/setup-erlang@v1.1.0
        with:
          otp-version: 23.2.1
      - run: ./rebar3 dialyzer
  coverage:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: vmq_test_user
          POSTGRES_PASSWORD: vmq_test_password
          POSTGRES_DB: vmq_test_database
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:5.7.33
        ports:
          - 3306:3306
        env:
          MYSQL_USER: vmq_test_user
          MYSQL_PASSWORD: vmq_test_password
          MYSQL_DATABASE: vmq_test_database
      memcached:
        image: memcached
        ports:
          - 11211:11211
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: vmq_test_user
          MONGO_INITDB_ROOT_PASSWORD: vmq_test_password
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2.0.0
      - run: sudo apt-get -y install libsnappy-dev
      - uses: gleam-lang/setup-erlang@v1.1.0
        with:
          otp-version: 23.2.1
      - run: ./rebar3 as ci_tests do eunit --cover, ct --cover
      - run: ./rebar3 cover --verbose
      - name: Archive coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: _build/ci_tests+test/cover/
          retention-days: 5
      - name: CT test report
        uses: actions/upload-artifact@v2
        with:
          name: ct-test-report
          if: always()
          path: _build/ci_tests+test/logs/
          retention-days: 5
  release-smoke-test:
    runs-on: ubuntu-latest
    container:
      image: erlang:23-slim
    steps:
      - run: apt-get update && apt-get -y install make libsnappy-dev git netcat gcc g++ curl libssl-dev
      - uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --tags
      - name: Build release
        run: make rel
      - name: Start release
        run: ./_build/default/rel/vernemq/bin/vernemq start
      - name: Wait up to 5 minutes for MQTT port to come up
        run: timeout 300 sh -c 'until nc -z $0 $1; do sleep 1; done' localhost 1883
      - name: Ping the server
        run: ./_build/default/rel/vernemq/bin/vernemq ping
      - name: Stop the server
        run: ./_build/default/rel/vernemq/bin/vernemq stop
  matrix:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        erlang: ["22.0", "22.3.4.9", "23.0.1"]
    steps:
      - uses: actions/checkout@v2.0.0
      - uses: gleam-lang/setup-erlang@v1.1.0
        with:
          otp-version: ${{ matrix.erlang }}
      - run: sudo apt-get -y install libsnappy-dev
      - run: ./rebar3 do eunit, ct
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - run: brew install erlang snappy
      - run: ./rebar3 do eunit, ct
